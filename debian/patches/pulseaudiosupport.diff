Index: speech-tools/audio/Makefile
===================================================================
--- speech-tools.orig/audio/Makefile	2012-11-21 20:26:44.324069766 +0100
+++ speech-tools/audio/Makefile	2012-11-22 01:31:45.168019204 +0100
@@ -44,7 +44,7 @@
 H = audioP.h
 CPPSRCS = gen_audio.cc nas.cc esd.cc sun16audio.cc \
           mplayer.cc win32audio.cc irixaudio.cc os2audio.cc \
-          macosxaudio.cc linux_sound.cc
+          macosxaudio.cc pulseaudio.cc  linux_sound.cc
 
 SRCS = $(CPPSRCS)
 OBJS = $(SRCS:.cc=.o)
Index: speech-tools/audio/audioP.h
===================================================================
--- speech-tools.orig/audio/audioP.h	2012-11-21 20:26:44.328069765 +0100
+++ speech-tools/audio/audioP.h	2012-11-22 01:32:06.568018308 +0100
@@ -40,6 +40,7 @@
 #define __AUDIOP_H__
 
 int play_nas_wave(EST_Wave &inwave, EST_Option &al);
+int play_pulse_wave(EST_Wave &inwave, EST_Option &al);
 int play_esd_wave(EST_Wave &inwave, EST_Option &al);
 int play_sun16_wave(EST_Wave &inwave, EST_Option &al);
 int play_linux_wave(EST_Wave &inwave, EST_Option &al);
@@ -49,6 +50,7 @@
 int play_macosx_wave(EST_Wave &inwave, EST_Option &al);
 
 int record_nas_wave(EST_Wave &inwave, EST_Option &al);
+int record_pulse_wave(EST_Wave &inwave, EST_Option &al);
 int record_esd_wave(EST_Wave &inwave, EST_Option &al);
 int record_sun16_wave(EST_Wave &inwave, EST_Option &al);
 int record_linux_wave(EST_Wave &inwave, EST_Option &al);
Index: speech-tools/audio/gen_audio.cc
===================================================================
--- speech-tools.orig/audio/gen_audio.cc	2012-11-22 01:16:31.028057650 +0100
+++ speech-tools/audio/gen_audio.cc	2012-11-22 01:32:58.816016110 +0100
@@ -81,6 +81,8 @@
     {
 	if (nas_supported)
 	    protocol = "netaudio";  // the default protocol
+	else if (pulse_supported)
+	    protocol = "pulseaudio";
 	else if (esd_supported)
 	    protocol = "esdaudio";
 	else if (sun16_supported)
@@ -116,6 +118,8 @@
 
     if (upcase(protocol) == "NETAUDIO")
 	return play_nas_wave(*toplay,al);
+    else if (upcase(protocol) == "PULSEAUDIO")
+	return play_pulse_wave(*toplay,al);
     else if (upcase(protocol) == "ESDAUDIO")
 	return play_esd_wave(*toplay,al);
     else if (upcase(protocol) == "SUNAUDIO")
@@ -249,6 +253,8 @@
     audios += " audio_command";
     if (sun16_supported)
 	audios += " sun16audio";
+    if (pulse_supported)
+	audios += " pulseaudio";
     if (freebsd16_supported)
 	audios += " freebsd16audio";
     if (linux16_supported)
@@ -307,6 +313,8 @@
 
     if (upcase(protocol) == "NETAUDIO")
 	return record_nas_wave(wave,al);
+    else if (upcase(protocol) == "PULSEAUDIO")
+	return record_pulse_wave(wave,al);
     else if (upcase(protocol) == "ESDAUDIO")
         return record_esd_wave(wave,al);
     else if (upcase(protocol) == "SUN16AUDIO")
Index: speech-tools/audio/pulseaudio.cc
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ speech-tools/audio/pulseaudio.cc	2010-08-09 09:00:31.000000000 +0200
@@ -0,0 +1,144 @@
+/*************************************************************************/
+/*                                                                       */
+/*                Centre for Speech Technology Research                  */
+/*                     University of Edinburgh, UK                       */
+/*                      Copyright (c) 1997,1998                          */
+/*                            Red Hat, Inc.                              */
+/*                         Copyright (c) 2008                            */
+/*                        All Rights Reserved.                           */
+/*                                                                       */
+/*  Permission is hereby granted, free of charge, to use and distribute  */
+/*  this software and its documentation without restriction, including   */
+/*  without limitation the rights to use, copy, modify, merge, publish,  */
+/*  distribute, sublicense, and/or sell copies of this work, and to      */
+/*  permit persons to whom this work is furnished to do so, subject to   */
+/*  the following conditions:                                            */
+/*   1. The code must retain the above copyright notice, this list of    */
+/*      conditions and the following disclaimer.                         */
+/*   2. Any modifications must be clearly marked as such.                */
+/*   3. Original authors' names are not deleted.                         */
+/*   4. The authors' names are not used to endorse or promote products   */
+/*      derived from this software without specific prior written        */
+/*      permission.                                                      */
+/*                                                                       */
+/*  THE UNIVERSITY OF EDINBURGH AND THE CONTRIBUTORS TO THIS WORK        */
+/*  DISCLAIM ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING      */
+/*  ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT   */
+/*  SHALL THE UNIVERSITY OF EDINBURGH NOR THE CONTRIBUTORS BE LIABLE     */
+/*  FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    */
+/*  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN   */
+/*  AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,          */
+/*  ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF       */
+/*  THIS SOFTWARE.                                                       */
+/*                                                                       */
+/*************************************************************************/
+/*                Author :  Michal Schmidt                               */
+/*                Date   :  November 2008                                */
+/*-----------------------------------------------------------------------*/
+/*  Optional support for PulseAudio                                      */
+/*=======================================================================*/
+
+#include "EST_Wave.h"
+#include "EST_Option.h"
+#include "audioP.h"
+
+#ifdef SUPPORT_PULSE
+
+#include <pulse/simple.h>
+#include <pulse/error.h>
+
+int pulse_supported = TRUE;
+const static char *err_prefix = "Pulseaudio: ";
+
+static int transfer_pulse_wave(EST_Wave &inwave, EST_Option &al, int record)
+{
+    short *waveform;
+    int num_samples;
+    int err, pa_ret;
+    int ret = -1;
+    pa_simple *s = NULL;
+    pa_sample_spec ss;
+
+    ss.format   = PA_SAMPLE_S16NE;
+    ss.channels = 1;
+    ss.rate     = inwave.sample_rate();
+
+    waveform    = inwave.values().memory();
+    num_samples = inwave.num_samples();
+    
+    /* In case num_samples == 0, don't play. Pulseaudio returns "invalid
+     * argument" if num_samples == 0, so it's better to check now.
+     * I don't expect num_samples < 0, but as we have to check anyway
+     * it doesn't hurt to check.
+     */
+    if (num_samples <= 0) {
+		ret=1;
+		goto finish;
+	}
+
+    s = pa_simple_new(NULL,           // Use the default server.
+	"Festival",                   // Our application's name.
+	record ? PA_STREAM_RECORD : PA_STREAM_PLAYBACK,
+	NULL,                         // Use the default device.
+	record ? "Record" : "Speech", // Description of our stream.
+	&ss,                // Our sample format.
+	NULL,               // Use default channel map
+	NULL,               // Use default buffering attributes.
+	&err);
+
+    if (!s) {
+	cerr << err_prefix << pa_strerror(err) << endl;
+	goto finish;
+    }
+
+    pa_ret = record ?
+	pa_simple_read (s, waveform, num_samples*sizeof(short), &err) :
+	pa_simple_write(s, waveform, num_samples*sizeof(short), &err);
+
+    if (pa_ret < 0) {
+	cerr << err_prefix << pa_strerror(err) << endl;
+	goto finish;
+    }
+
+    if (!record && pa_simple_drain(s, &err) < 0) {
+	cerr << err_prefix << pa_strerror(err) << endl;
+	goto finish;
+    }
+
+    ret = 1;
+finish:
+    if (s)
+	pa_simple_free(s);
+    return ret;
+}
+
+int play_pulse_wave(EST_Wave &inwave, EST_Option &al)
+{
+	return transfer_pulse_wave(inwave, al, 0);
+}
+
+int record_pulse_wave(EST_Wave &inwave, EST_Option &al)
+{
+	return transfer_pulse_wave(inwave, al, 1);
+}
+
+#else
+int pulse_supported = FALSE;
+
+int play_pulse_wave(EST_Wave &inwave, EST_Option &al)
+{
+    (void)inwave;
+    (void)al;
+    cerr << "Audio: pulse not compiled in this version" << endl;
+    return -1;
+}
+
+int record_pulse_wave(EST_Wave &inwave, EST_Option &al)
+{
+    (void)inwave;
+    (void)al;
+    cerr << "Audio: pulse not compiled in this version" << endl;
+    return -1;
+}
+
+#endif
Index: speech-tools/config/config
===================================================================
--- speech-tools.orig/config/config	2012-11-22 01:16:36.816057407 +0100
+++ speech-tools/config/config	2012-11-22 01:37:21.712005055 +0100
@@ -82,6 +82,9 @@
 ## Elightenment Sound Demon, for KDE etc.
 INCLUDE_MODULES += ESD_AUDIO
 
+## PulseAudio sound server
+# INCLUDE_MODULES += PULSE_AUDIO
+
 ## Native audio for your platform (sun, linux, freebsd, irix, windows)
 INCLUDE_MODULES += NATIVE_AUDIO
 
Index: speech-tools/config/config.in
===================================================================
--- speech-tools.orig/config/config.in	2012-11-22 01:16:36.840057406 +0100
+++ speech-tools/config/config.in	2012-11-22 01:37:03.248005830 +0100
@@ -79,6 +79,9 @@
 ## NCD's network audio system.
 # INCLUDE_MODULES += NAS_AUDIO
 
+## PulseAudio sound server
+# INCLUDE_MODULES += PULSE_AUDIO
+
 ## Elightenment Sound Demon, for KDE etc.
 # INCLUDE_MODULES += ESD_AUDIO
 
Index: speech-tools/config/modules/Makefile
===================================================================
--- speech-tools.orig/config/modules/Makefile	2012-11-21 20:26:44.336069765 +0100
+++ speech-tools/config/modules/Makefile	2012-11-22 01:34:51.852011355 +0100
@@ -41,7 +41,8 @@
 	psola_tm.mak editline.mak tcl.mak \
 	freebsd16_audio.mak irix_audio.mak linux16_audio.mak \
 	sun16_audio.mak win32_audio.mak macosx_audio.mak \
-	mplayer_audio.mak nas_audio.mak esd_audio.mak
+	mplayer_audio.mak nas_audio.mak esd_audio.mak \
+	pulse_audio.mak
 
 FILES = Makefile descriptions $(RULESETS) 
 
Index: speech-tools/config/systems/default.mak
===================================================================
--- speech-tools.orig/config/systems/default.mak	2012-11-21 20:26:44.336069765 +0100
+++ speech-tools/config/systems/default.mak	2012-11-22 01:36:22.456007545 +0100
@@ -61,6 +61,12 @@
 NAS_LIB = /usr/X11R6/lib
 
 ###########################################################################
+## Where to find PulseAudio
+
+PULSE_INCLUDE = /usr/include
+PULSE_LIB = /usr/lib
+
+###########################################################################
 ## Where to find Enlightenment Speech Demon
 
 ESD_INCLUDE = /usr/local/include
